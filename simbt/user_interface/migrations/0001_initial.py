# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-03-27 20:19
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.UUIDField(default=uuid.UUID('2bdcedb0-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('admin_cout_perte_puissance', models.FloatField(default=120.0)),
                ('admin_cout_pertes_energie', models.FloatField(default=7.7)),
                ('admin_r_temp_fixe', models.BooleanField(default=True)),
                ('admin_temp_ambiance_pte_a', models.FloatField(default=-25.0)),
                ('admin_temp_ambiance_pte_s', models.FloatField(default=4.0)),
                ('admin_temp_cond_pte_a', models.FloatField(default=30.4)),
                ('admin_temp_cond_pte_s', models.FloatField(default=90.0)),
                ('admin_r1_depart_mt', models.FloatField(default=0)),
                ('admin_x1_depart_mt', models.FloatField(default=0)),
                ('admin_r0_depart_mt', models.FloatField(default=0)),
                ('admin_x0_depart_mt', models.FloatField(default=0)),
                ('admin_r1_cond_mt_a', models.FloatField(default=0)),
                ('admin_x1_cond_mt_a', models.FloatField(default=0)),
                ('admin_r0_cond_mt_a', models.FloatField(default=0)),
                ('admin_x0_cond_mt_a', models.FloatField(default=0)),
                ('admin_r1_cond_mt_s', models.FloatField(default=0)),
                ('admin_x1_cond_mt_s', models.FloatField(default=0)),
                ('admin_r0_cond_mt_s', models.FloatField(default=0)),
                ('admin_x0_cond_mt_s', models.FloatField(default=0)),
                ('admin_ph_ph_mt', models.FloatField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AutreCharge',
            fields=[
                ('autre_charge_id', models.UUIDField(default=uuid.UUID('2bdeda3a-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('nom_du_noeud', models.CharField(max_length=25)),
                ('position_x', models.FloatField()),
                ('position_y', models.FloatField()),
                ('successeur', models.CharField(max_length=25)),
                ('predecesseur', models.CharField(max_length=25)),
                ('autre_charge_description', models.CharField(max_length=150)),
                ('autre_charge_raccorde', models.BooleanField(default=False)),
                ('autre_charge_kVA', models.FloatField()),
                ('autre_charge_FP', models.FloatField()),
                ('autre_charge_Fr', models.FloatField()),
                ('autre_charge_facteur_reprise', models.FloatField(default=120)),
                ('autre_charge_facteur_simultaneite_de_niveau_2', models.FloatField(default=85)),
                ('autre_charge_i_court_circuit', models.FloatField(blank=True, null=True)),
                ('autre_charge_i_court_circuit_client', models.FloatField(blank=True, null=True)),
                ('autre_charge_pte_ete_pte_hiver_pourcent', models.FloatField(default=80)),
                ('autre_charge_network', models.FloatField(default=0)),
                ('autre_charge_pointe_ete', models.FloatField()),
                ('autre_charge_pointe_ete_kvar', models.FloatField()),
                ('autre_charge_pointe_ete_kw', models.FloatField()),
                ('autre_charge_pointe_hiver', models.FloatField()),
                ('autre_charge_pointe_hiver_kvar', models.FloatField()),
                ('autre_charge_pointe_hiver_kw', models.FloatField()),
                ('autre_charge_reprise_hiver', models.FloatField()),
                ('autre_charge_reprise_hiver_kvar', models.FloatField()),
                ('autre_charge_reprise_hiver_kw', models.FloatField()),
                ('autre_charge_cummul_v_pourcent', models.FloatField()),
                ('autre_charge_couleur', models.CharField(default='gris', max_length=25)),
                ('autre_charge_facteur_utilisation_annuel', models.FloatField()),
                ('autre_charge_date_creation', models.DateField(auto_now=True)),
                ('autre_charge_date_modification', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.UUIDField(default=uuid.UUID('2bdd113c-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('client_nom_projeteur', models.CharField(max_length=75, null=True)),
                ('client_nom_approbateur', models.CharField(max_length=75, null=True)),
                ('client_chute_tension_unite', models.CharField(choices=[('%', 'pourcent'), ('120', 'base_de_120')], default='120', max_length=15)),
                ('client_charge_unite', models.CharField(choices=[('kVA', 'kilo_volt_ampere'), ('A', 'ampere')], default='kVA', max_length=15)),
                ('client_courant_court_circuit_unite', models.CharField(choices=[('%', 'pourcent'), ('kA', 'kilo_ampere')], default='%', max_length=15)),
                ('client_superficie_unite', models.CharField(choices=[('m^2', 'metre_carre'), ('p^2', 'pied_carre')], default='m^2', max_length=25)),
                ('client_temperature_ambiante_pointe_sout_defaut', models.FloatField(default=4.0)),
                ('client_temperature_ambiante_pointe_aerien_defaut', models.FloatField(default=-25.0)),
                ('client_temperature_conducteur_pointe_sout_defaut', models.FloatField(default=90.0)),
                ('client_temperature_conducteur_pointe_aerien_defaut', models.FloatField(default=30.4)),
                ('client_circuit_constant_defaut', models.BooleanField(default=False)),
                ('client_last_login', models.DateTimeField(blank=True, null=True)),
                ('client_date_creation', models.DateField(auto_now_add=True)),
                ('client_date_modification', models.DateField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conducteur',
            fields=[
                ('conducteur_id', models.UUIDField(default=uuid.UUID('2bde0af6-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('nom_du_noeud', models.CharField(max_length=25)),
                ('longueur', models.FloatField()),
                ('position_x', models.FloatField()),
                ('position_y', models.FloatField()),
                ('predecesseur', models.CharField(max_length=25)),
                ('successeur', models.CharField(max_length=25)),
                ('conducteur_sout', models.BooleanField(default=False)),
                ('conducteur_charge_diversite_ete', models.FloatField(default=0)),
                ('conducteur_charge_diversite_ete_kvar', models.FloatField(default=0)),
                ('conducteur_charge_diversite_ete_kw', models.FloatField(default=0)),
                ('conducteur_charge_diversite_hiver', models.FloatField(default=0)),
                ('conducteur_charge_diversite_hiver_kvar', models.FloatField(default=0)),
                ('conducteur_charge_diversite_hiver_kw', models.FloatField(default=0)),
                ('conducteur_charge_max_ete_aval', models.FloatField(default=0)),
                ('conducteur_charge_max_hiver_aval', models.FloatField(default=0)),
                ('conducteur_reprise_hiver', models.FloatField(default=0)),
                ('conducteur_reprise_hiver_kvar', models.FloatField(default=0)),
                ('conducteur_reprise_hiver_kw', models.FloatField(default=0)),
                ('conducteur_chute_cummul_v_pourcent', models.FloatField(default=0)),
                ('conducteur_chute_loc_v_pourcent', models.FloatField(default=0)),
                ('conducteur_couleur', models.CharField(default='grey', max_length=10)),
                ('conducteur_i_court_circuit', models.FloatField(default=0)),
                ('conducteur_niveau_diversite', models.FloatField(default=0)),
                ('conducteur_noeud_charge_ete_max', models.CharField(blank=True, max_length=10, null=True)),
                ('conducteur_noeud_charge_hiver_max', models.CharField(blank=True, max_length=10, null=True)),
                ('conducteur_r_source_cummul', models.FloatField(default=0)),
                ('conducteur_x_source_cummul', models.FloatField(default=0)),
                ('conducteur_network', models.IntegerField(default=0)),
                ('conducteur_source', models.IntegerField(blank=True, null=True)),
                ('conducteur_status', models.CharField(default='creating', max_length=25)),
                ('conducteur_date_creation', models.DateField(auto_now_add=True)),
                ('conducteur_date_modifier', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourbeDeDiversitee',
            fields=[
                ('courbe_de_diversite_id', models.UUIDField(default=uuid.UUID('2bdeb988-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('courbe_de_diversite_superficie', models.IntegerField()),
                ('courbe_de_diversite_code_saison', models.CharField(max_length=10)),
                ('courbe_de_diversite_reprise_m', models.FloatField()),
                ('courbe_de_diversite_reprise_b', models.FloatField()),
                ('courbe_de_diversite_date_creation', models.DateField(auto_now_add=True)),
                ('courbe_de_diversite_date_modification', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Etude',
            fields=[
                ('etude_id', models.UUIDField(default=uuid.UUID('2bdd3356-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('etude_nom', models.CharField(max_length=250)),
                ('etude_description', models.CharField(blank=True, max_length=500, null=True)),
                ('etude_temperature_ambiante_pointe_sout', models.FloatField()),
                ('etude_temperature_ambiante_pointe_aerien', models.FloatField()),
                ('etude_conducteur_pointe_sout', models.FloatField()),
                ('etude_conducteur_pointe_aerien', models.FloatField()),
                ('etude_distance_ht_mt_sout', models.FloatField(blank=True, default=None, null=True)),
                ('etude_distance_ht_mt_aerien', models.FloatField(blank=True, default=None, null=True)),
                ('etude_cap_rupture_boitier_client', models.FloatField(default=10.0)),
                ('etude_tension', models.CharField(max_length=10, default="120/240")),
                ('etude_tension_mt_accru', models.BooleanField(default=False)),
                ('etude_perte_puissance_pointe_dollar_kW', models.DecimalField(decimal_places=2, default=0.0, max_digits=65)),
                ('etude_perte_energie_hors_pointe_Wh', models.FloatField(default=0.0)),
                ('etude_date_creation', models.DateField(auto_now_add=True)),
                ('etude_date_modification', models.DateField(auto_now=True)),
                ('etude_serialized_visual', models.TextField(blank=True, null=True)),
                ('clients_etudes', models.ManyToManyField(to='user_interface.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Logement',
            fields=[
                ('logement_id', models.UUIDField(default=uuid.UUID('2bde5538-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('nom_du_noeud', models.CharField(max_length=25)),
                ('logement_raccorde', models.BooleanField(default=False)),
                ('logement_charge_pointe_ete', models.FloatField(blank=True, null=True)),
                ('logement_charge_pointe_ete_kvar', models.FloatField(blank=True, null=True)),
                ('logement_charge_pointe_ete_kw', models.FloatField(blank=True, null=True)),
                ('logement_charge_pointe_hiver', models.FloatField(blank=True, null=True)),
                ('logement_charge_pointe_hiver_kvar', models.FloatField(blank=True, null=True)),
                ('logement_charge_pointe_hiver_kw', models.FloatField(blank=True, null=True)),
                ('logement_charge_reprise_hiver', models.FloatField(blank=True, null=True)),
                ('logement_charge_reprise_hiver_kvar', models.FloatField(blank=True, null=True)),
                ('logement_charge_reprise_hiver_kw', models.FloatField(blank=True, null=True)),
                ('logement_chute_cummul_v_pourcent', models.FloatField(blank=True, null=True)),
                ('logement_couleur', models.CharField(default='grey', max_length=25)),
                ('logement_fp_ete', models.FloatField(default=0)),
                ('logement_fp_hiver', models.FloatField(default=0)),
                ('logement_fp_reprise_hiver', models.FloatField(default=0)),
                ('logement_fr_ete', models.FloatField(default=0)),
                ('logement_fr_reprise_hiver', models.FloatField(default=0)),
                ('logement_i_court_circuit', models.FloatField(blank=True, null=True)),
                ('logement_i_court_circuit_client', models.FloatField(blank=True, null=True)),
                ('logement_fr_hiver', models.FloatField(default=0)),
                ('logement_network', models.IntegerField(blank=True, null=True)),
                ('surface_habitable', models.FloatField()),
                ('nombre_etage', models.IntegerField()),
                ('nombre_de_logement', models.IntegerField()),
                ('position_x', models.FloatField()),
                ('position_y', models.FloatField()),
                ('predecesseur', models.CharField(max_length=25)),
                ('successeur', models.CharField(max_length=25)),
                ('logement_date_creation', models.DateField(auto_now_add=True)),
                ('logement_date_modification', models.DateField(auto_now=True)),
                ('etude_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_interface.Etude')),
            ],
        ),
        migrations.CreateModel(
            name='LogementCodeSaison',
            fields=[
                ('logement_code_saison_type', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('logement_code_saison_code_hiver', models.CharField(max_length=15)),
                ('logement_code_saison_code_ete', models.CharField(max_length=15)),
                ('logement_code_saison_date_creation', models.DateField(auto_now=True)),
                ('logement_code_saison_date_modification', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MatClient',
            fields=[
                ('mat_client_id', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('mat_client_resistance', models.FloatField()),
                ('mat_client_reactance', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Noeud',
            fields=[
                ('noeud_id', models.UUIDField(default=uuid.UUID('2bde36f2-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('nom_du_noeud', models.CharField(max_length=25)),
                ('noeud_cummul_V_pourcent', models.FloatField(blank=True, null=True)),
                ('noeud_couleur', models.CharField(default='grey', max_length=10)),
                ('noeud_i_court_circuit', models.FloatField(blank=True, null=True)),
                ('noeud_connected', models.BooleanField(default=False)),
                ('noeud_network', models.IntegerField(blank=True, null=True)),
                ('noeud_status', models.CharField(default='creating', max_length=25)),
                ('position_x', models.FloatField()),
                ('position_y', models.FloatField()),
                ('predecesseur', models.CharField(max_length=25)),
                ('successeur', models.CharField(max_length=25)),
                ('noeud_date_creation', models.DateField(auto_now_add=True)),
                ('noeud_date_modifier', models.DateField(auto_now=True)),
                ('etude_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_interface.Etude')),
            ],
        ),
        migrations.CreateModel(
            name='PenteOrigineDeDiversitee',
            fields=[
                ('pente_origine_diversite_id', models.UUIDField(default=uuid.UUID('2bdecb1c-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('pente_origine_diversite_nbr_client', models.IntegerField()),
                ('pente_origine_diversite_m', models.FloatField()),
                ('pente_origine_diversite_b', models.FloatField()),
                ('courbe_de_diversite_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user_interface.CourbeDeDiversitee')),
            ],
        ),
        migrations.CreateModel(
            name='Transformateur',
            fields=[
                ('transformateur_id', models.UUIDField(default=uuid.UUID('2bde8d00-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('nom_du_noeud', models.CharField(max_length=25)),
                ('position_x', models.FloatField()),
                ('position_y', models.FloatField()),
                ('successeur', models.CharField(max_length=25)),
                ('predecesseur', models.CharField(max_length=25)),
                ('transformateur_charge_diversite_ete', models.FloatField(default=0)),
                ('transformateur_charge_diversite_ete_kvar', models.FloatField(default=0)),
                ('transformateur_charge_diversite_ete_kw', models.FloatField(default=0)),
                ('transformateur_charge_diversite_hiver', models.FloatField(default=0)),
                ('transformateur_charge_diversite_hiver_kvar', models.FloatField(default=0)),
                ('transformateur_charge_diversite_hiver_kw', models.FloatField(default=0)),
                ('transformateur_charge_max_ete_aval', models.FloatField(default=0)),
                ('transformateur_charge_max_hiver_aval', models.FloatField(default=0)),
                ('transformateur_charge_reprise_hiver', models.FloatField(default=0)),
                ('transformateur_charge_reprise_hiver_kvar', models.FloatField(default=0)),
                ('transformateur_charge_reprise_hiver_kw', models.FloatField(default=0)),
                ('transformateur_chute_cummul_v_pourcent', models.FloatField(blank=True, null=True)),
                ('transformateur_chute_loc_v_pourcent', models.FloatField(blank=True, null=True)),
                ('transformateur_i_court_circuit', models.FloatField(blank=True, null=True)),
                ('transformateur_niveau_diversite', models.FloatField(default=0)),
                ('transformateur_noeud_charge_ete_max', models.CharField(blank=True, max_length=10, null=True)),
                ('transformateur_noeud_charge_hiver_max', models.CharField(blank=True, max_length=10, null=True)),
                ('transformateur_network', models.IntegerField(default=0)),
                ('transformateur_date_creation', models.DateField(auto_now_add=True)),
                ('transformateur_date_modification', models.DateField(auto_now=True)),
                ('etude_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_interface.Etude')),
            ],
        ),
        migrations.CreateModel(
            name='TypeDeChauffage',
            fields=[
                ('type_chauffage_id', models.UUIDField(default=uuid.UUID('2bdd69b6-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('type_chauffage_type', models.CharField(max_length=35)),
                ('type_chauffage_description', models.CharField(max_length=150)),
                ('type_chauffage_date_creation', models.DateField(auto_now_add=True)),
                ('type_chauffage_date_modification', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeDeConducteur',
            fields=[
                ('type_conducteur_id', models.UUIDField(default=uuid.UUID('2bdd7ea6-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('type_conducteur_tension', models.IntegerField(choices=[(0, '120V/240V'), (1, '120V/208V & 347V/600V')])),
                ('type_conducteur_type', models.CharField(max_length=35)),
                ('type_conducteur_description', models.CharField(max_length=150)),
                ('type_conducteur_est_aerien', models.BooleanField()),
                ('type_conducteur_resistance_par_km', models.FloatField()),
                ('type_conducteur_variation_resistance_par_celcius', models.FloatField()),
                ('type_conducteur_resistance_par_km_avec_temperature', models.FloatField()),
                ('type_conducteur_courant_admissible', models.FloatField()),
                ('type_conducteur_variation_temp_celon_courant', models.FloatField()),
                ('type_conducteur_variation_resistance_celon_courant', models.FloatField()),
                ('type_conducteur_reactance', models.FloatField()),
                ('type_conducteur_capacite_repr_hiver', models.FloatField()),
                ('type_conducteur_capacite_planif_ete', models.FloatField()),
                ('type_conducteur_date_creation', models.DateField(auto_now_add=True)),
                ('type_conducteur_date_modification', models.DateField(auto_now=True)),
                ('type_conducteur_mat_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='user_interface.MatClient')),
            ],
        ),
        migrations.CreateModel(
            name='TypeDeLogement',
            fields=[
                ('type_logement_id', models.UUIDField(default=uuid.UUID('2bddb5b0-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('type_logement_type', models.CharField(max_length=35)),
                ('type_logement_description', models.CharField(max_length=150)),
                ('type_logement_superficie_habitable_defaut', models.FloatField()),
                ('type_logement_date_creation', models.DateField(auto_now_add=True)),
                ('type_logement_date_modification', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeDeTransformateur',
            fields=[
                ('type_transformateur_id', models.UUIDField(default=uuid.UUID('2bddc53c-31fc-11e8-a455-0242ac120003'), primary_key=True, serialize=False)),
                ('type_transformateur_tension', models.IntegerField(choices=[(0, '120V/240V'), (1, '120V/208V'), (2, '347V/600V')])),
                ('type_transformateur_type', models.CharField(max_length=35)),
                ('type_transformateur_description', models.CharField(max_length=150)),
                ('type_transformateur_capacite', models.FloatField()),
                ('type_transformateur_resistance_pourcent', models.FloatField()),
                ('type_transformateur_reactance_pourcent', models.FloatField()),
                ('type_transformateur_perte_a_vide_pourcent', models.FloatField()),
                ('type_transformateur_est_aerien', models.BooleanField(default=False)),
                ('type_transformateur_date_creation', models.DateField(auto_now_add=True)),
                ('type_transformateur_date_modification', models.DateField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='transformateur',
            name='type_de_transformateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user_interface.TypeDeTransformateur'),
        ),
        migrations.AddField(
            model_name='logement',
            name='logement_code_saison',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='user_interface.LogementCodeSaison'),
        ),
        migrations.AddField(
            model_name='logement',
            name='type_de_chauffage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user_interface.TypeDeChauffage'),
        ),
        migrations.AddField(
            model_name='logement',
            name='type_de_logement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user_interface.TypeDeLogement'),
        ),
        migrations.AddField(
            model_name='conducteur',
            name='etude_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_interface.Etude'),
        ),
        migrations.AddField(
            model_name='conducteur',
            name='type_conducteur_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user_interface.TypeDeConducteur'),
        ),
    ]
